{"content":"<h2 id=\"问题描述\">问题描述</h2>\n<p>当在 <code>body</code> 中使用了 <code>filter</code> 滤镜属性的时候，会导致 <code>fixed</code> 元素定位发生错误，即不再相对 <code>viewport</code> 进行定位，而是相对整个网页（ <code>body</code> 元素）进行定位。</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>css filter issue<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"css\">\n      <span class=\"hljs-selector-tag\">body</span> {\n        <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">600px</span>;\n        <span class=\"hljs-attribute\">background</span>: red;\n        <span class=\"hljs-attribute\">filter</span>: <span class=\"hljs-built_in\">grayscale</span>(<span class=\"hljs-number\">1</span>); <span class=\"hljs-comment\">/* 关键代码 */</span>\n      }\n\n      <span class=\"hljs-selector-class\">.fixed</span> {\n        <span class=\"hljs-attribute\">color</span>: yellow;\n        <span class=\"hljs-attribute\">position</span>: fixed;\n        <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-attribute\">right</span>: <span class=\"hljs-number\">0</span>;\n      }\n    </span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"fixed\"</span>&gt;</span>fixed item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></code></pre>\n<p>效果图如下：注意右上角的 <code>fixed item</code> 元素已经不再相对屏幕视图右上角定位了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Huanqiang/imgBed/blog/filter_fixed.gif\" alt=\"filter_fixed\"></p>\n<h2 id=\"解决方案\">解决方案</h2>\n<p>产生这个问题的原因就是：当 <code>filter</code> 不为 <code>none</code> 的时候，如果该元素或者其子元素具有 <code>absolute</code> 或 <code>fixed</code> 属性，那么它会为其创建一个新的包含块/容器，会造成该  <code>absolute</code> 或 <code>fixed</code> 元素的定位发生变化（就是改变了 <code>absolute</code> 或 <code>fixed</code> 元素的定位&lt;父&gt;元素，变成新创建的元素）。</p>\n<blockquote>\n<p>以上面的例子说明，当在 <code>body</code> 标签中使用了 <code>filter</code> 属性后，<code>filter</code> 就会生成一个新的包含块，其位置大小和<code>body</code> 一样，然后 <code>fixed</code> 元素就会根据这个包含块进行定位，所以我们会看到 <code>fixed</code> 元素失去原有的特性；</p>\n</blockquote>\n<p>但是，<strong>如果 <code>filter</code> 作用在根元素（即 <code>html</code> 标签）时，它是不会为 <code>absolute</code> 或 <code>fixed</code> 子元素创建新的包含块的</strong>。</p>\n<blockquote>\n<p>参考：<a href=\"https://drafts.fxtf.org/filter-effects/#FilterProperty\">https://drafts.fxtf.org/filter-effects/#FilterProperty</a></p>\n</blockquote>\n<p>所以解决方案也就很简单了，只需要将 <code>filter</code> 属性放在 <code>html</code> 标签上就好了</p>\n<pre><code class=\"hljs css\"><span class=\"hljs-selector-tag\">html</span> {\n    <span class=\"hljs-attribute\">filter</span>: <span class=\"hljs-built_in\">grayscale</span>(<span class=\"hljs-number\">1</span>);\n}</code></pre>\n<h2 id=\"扩展\">扩展</h2>\n<h3 id=\"1-position-fixed\">1. <code>position: fixed</code></h3>\n<p>当一个元素包含<code>fixed</code> 属性时，屏幕视口（<code>viewport</code>）会为其创建一个包含块（<code>containing block</code>），其大小就是 <code>viewport</code> 的大小，然后该 <code>fixed</code> 元素基于该包含块进行定位。所以通常我们会说 <code>fixed</code> 元素是相对 <code>viewport</code> 来定位的。</p>\n<p>此外，<code>fixed</code> 属性会创建新的层叠上下文。当元素祖先的 <code>transform</code>, <code>perspective</code> 或 <code>filter</code> 属性非 <code>none</code> 时，容器由视口改为该祖先。</p>\n<blockquote>\n<p>参考：<a href=\"https://www.w3.org/TR/css-position-3/#fixed-pos\">https://www.w3.org/TR/css-position-3/#fixed-pos</a></p>\n</blockquote>\n<h3 id=\"2-html-标签和-body-标签\">2. <code>HTML</code> 标签和 <code>body</code> 标签</h3>\n<p>两者之间的区别可以参考这边博客：<a href=\"http://phrogz.net/css/htmlvsbody.html\">http://phrogz.net/css/htmlvsbody.html</a></p>\n<blockquote>\n<p>ps：HTML 元素是 max(屏幕高度&lt;viewport高度&gt;, 内部元素高度&lt;body元素高度&gt;)</p>\n</blockquote>\n"}