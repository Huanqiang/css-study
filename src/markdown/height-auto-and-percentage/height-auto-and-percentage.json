{"content":"<h1 id=\"关于-height-100-和-auto-的计算方式\">关于 height 100% 和 auto 的计算方式</h1>\n<h2 id=\"height-auto\"><code>height: auto;</code></h2>\n<p><code>height: auto;</code> 很好理解，当一个元素的高度被设置为 auto 时，高度就是依赖于其内容的高度。</p>\n<h2 id=\"height-100\"><code>height: 100%;</code></h2>\n<p>我们都知道 height 属性直接设置为 100% 是无效的，关于这点，网上有个说法是这样的：</p>\n<blockquote>\n<p>“假如父元素 height:auto 且没有其他格式化高度，子元素支持 height:100%，则很可能会出现高度死循环”。</p>\n<p>什么意思呢？</p>\n<p>例如：一个<code>元素里面有一张`vertical-align`为`bottom`同时高度为`192`像素的图片，此时，该</code>高度就是<code>192</code>像素，假设此时，插入一个子元素，高度设为<code>100%</code>，如果此时<code>height:100%</code>可以计算，则子元素应该也是<code>192</code>像素。但是啊但是，我们的父元素<code>height</code>值是<code>auto</code>，岂不是现在高度要从原来的<code>192</code>像素变成<code>384</code>像素，然后<code>height:100%</code>的子元素高度又要变成<code>384</code>像素，父元素高度又双倍……死循环了！</p>\n</blockquote>\n<blockquote>\n<p>引用自：<a href=\"https://www.zhangxinxu.com/wordpress/2016/09/talking-about-css-infinite-endless-loop/\">张鑫旭的文章 《从 height:100%不支持聊聊 CSS 中的“死循环”》</a></p>\n</blockquote>\n<p>这个其实很明显是有问题的，张鑫旭大佬在上述文章中给出了很好的反驳：</p>\n<blockquote>\n<p>从浏览器的渲染机制来说，浏览器会从头而下，先从 head 中加载 css、js 文件，然后由外向内渲染各个节点，也就是说父元素的宽度会在渲染子元素之前就确定下来，（即其 margin + padding + border + width = 其 containing block 的宽），那么如果子元素的宽设置为了 100%，且加上 padding、border 后总长超过了父元素的宽的话，浏览器也不会重新去渲染父元素宽，就让子元素溢出好了，并设置了 overflow 来解决溢出的影响。</p>\n<p>高度也是如此，因为浏览器的渲染机制，所以不会高度死循环的问题。</p>\n</blockquote>\n<p>那为什么高度不能为 100% 呢？</p>\n<p>其实在 css 规范中，其明确指出了 height 设置为 100% 时的计算方式：</p>\n<blockquote>\n<p>Specifies a percentage height. The percentage is calculated with respect to the height of the generated box’s <a href=\"https://www.w3.org/TR/CSS22/visuren.html#containing-block\">containing block</a>. If the height of the containing block is not specified explicitly (i.e., it depends on content height), and this element is not absolutely positioned, the used height is calculated as if ‘auto’ was specified. A percentage height on the <a href=\"https://www.w3.org/TR/CSS22/conform.html#root\">root element</a> is relative to the <a href=\"https://www.w3.org/TR/CSS22/visudet.html#containing-block-details\">initial containing block</a>.</p>\n</blockquote>\n<p>就是说，高度百分比的计算是依赖于父组件的包含块的高度的。如果一个包含块的高度没有确定，且元素不是绝对定位元素，那么它的包含块高度就依赖于其内容的高度，就等同于设置了 auto 。根元素的百分比高度依赖于初始包含块（这里就是指视窗 <code>viewport</code> ）。</p>\n<p>所以说如果一个元素设置了 <code>height: 100%;</code>，但是其父元素的高度没有设置，那该元素的百分比高度就不会生效，还是依赖于内容高度。</p>\n<h2 id=\"html-的-height\"><code>&lt;html&gt;</code> 的 <code>height</code></h2>\n<p>上述规范中有这样一句话 <code>A percentage height on the root element is relative to the initial containing block.</code>，就是说根元素的百分比高度依赖于初始包含块（这里就是指视窗 <code>viewport</code> ）。</p>\n<p>我们来试一下 <code>height: 100%;</code> 的情况：</p>\n<pre><code class=\"hljs css\"><span class=\"hljs-selector-tag\">html</span> {\n  <span class=\"hljs-attribute\">background-color</span>: red;\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">0px</span>;\n}</code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Huanqiang/imgBed/blog/WeChatb12333e539e981d066779f939b1e436b.png\" alt=\"WeChatb12333e539e981d066779f939b1e436b\"></p>\n<p>没什么问题，然后我们再来试一下 <code>height: auto;</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Huanqiang/imgBed/blog/image-20200528102726618.png\" alt=\"image-20200528102726618\"></p>\n<p>可以看到，<code>html</code>元素的高度确实是内容的高度，为 <code>22px</code>；但是这里有一个问题就是，为什么浏览器的背景色还是红的呢，应该说红色部分这是 html 元素高度的那部分才对。</p>\n<p>这是因为浏览器会选择一个根节点作为背景颜色，所以这里的红色根本不是 html 的背景色，而是浏览器的背景。浏览器将我们的 html 元素的背景色作为了浏览器的背景色。同时如果我们没有设置 html 节点背景颜色，那么浏览器就会选择 body 的背景颜色作为浏览器的背景。</p>\n<pre><code class=\"hljs css\"><span class=\"hljs-selector-tag\">html</span> {\n  <span class=\"hljs-comment\">/* background-color: red; */</span>\n  <span class=\"hljs-attribute\">height</span>: auto;\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">0px</span>;\n}\n<span class=\"hljs-selector-tag\">body</span> {\n  <span class=\"hljs-attribute\">background-color</span>: yellowgreen;\n  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0px</span>;\n}</code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Huanqiang/imgBed/blog/image-20200528103122234.png\" alt=\"image-20200528103122234\"></p>\n<h2 id=\"参考\">参考</h2>\n<ol>\n<li><a href=\"https://www.w3.org/TR/CSS22/visudet.html#the-height-property\">https://www.w3.org/TR/CSS22/visudet.html#the-height-property</a></li>\n<li><a href=\"https://www.zhangxinxu.com/wordpress/2016/09/talking-about-css-infinite-endless-loop/\">张鑫旭的文章 《从 height:100%不支持聊聊 CSS 中的“死循环”》</a></li>\n</ol>\n"}